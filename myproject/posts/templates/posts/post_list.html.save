{% extends 'base.html' %}

{% block title %}Post List{% endblock %}
{% block styles %}
    <style>

    .article_top, .article_content, .article_buttons, .article_comment {
        border: 1px solid #999; /* 테두리 스타일 지정 (회색) */
        padding: 10px;
        margin: 10px 0;
    }
    .articles{
        border: 1px solid #999; /* 테두리 스타일 지정 (회색) */
        margin-bottom: 20px; /* 아티클 간격 늘리기 */

    }
    .article_top {
        display: flex;
        justify-content: space-between; /* 요소 사이의 간격을 균등하게 배치 */
    }
    .display_flex{
        display:flex;
    }

    .article_section {
        display: grid;
        place-items: center; /* 가로, 세로 중앙 정렬 */
    }
    .article_content img {
        width: 100%; /* 이미지의 너비를 100%로 설정하여 div에 맞게 축소 */
        height: auto; /* 이미지의 높이를 자동 조절하여 비율을 유지 */
    }

    .like_comment_share_save {
        display: flex;
      }
      
    .like_comment_share_save_button {
        flex: 1; /* Distribute available space equally */
        border: 1px solid black;
        padding: 10px;
        margin: 5px;
    }
    .finger-cursor {
        /* 기본 스타일 */
        cursor: pointer; /* 손가락 모양으로 변경 */
    }
    .invisible{
        display: none;
    }
    .visible{
        display: inline;
    }
    </style>

    <style> /*모달*/
    .modal-overlay {
        display: none;
        position: fixed;
            top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }

    .modal {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        max-width: 80%;
        width: 80%;
        height: 80%;
        text-align: center;
        position: relative;
    }

    .modal-close {
        position: absolute;
        top: 10px;
        right: 10px;
        background: none;
        border: none;
        font-size: 80px;
        cursor: pointer;
    }

    .modal-content {
        border: 1px solid #999; /* 테두리 스타일 지정 (회색) */
        width: 100%;
        height: 100%;
        display: flex;

    }
    .modal_image_div{
        border: 1px solid #999; /* 테두리 스타일 지정 (회색) */
        width: 60%;
        height: 100%;
    }
    .modal_right_div{
        border: 1px solid #999; /* 테두리 스타일 지정 (회색) */
        width: 40%;
        height: 100%;
    }    
    .post_image_url_img{
        width: 100%;
        max-height:100%;
    }
</style>
{% endblock %}
{%block scripts %}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script> // ajax로 좋아요 변경하기
    $(document).ready(function () {
      $('.like_button').on('click', function () {
        var csrftoken=getCookie('csrftoken');   
        var articlePk =$(this).data('pk');
        var likeButton = $(this);
        var article = likeButton.closest('.articles');
        var numLikeElement = article.find('.num_of_like_b'); // num_of_like_b 요소 선택

        $.ajax({
          type: 'POST',
          url: 'like/' + articlePk,
          headers: {"X-CSRFToken":csrftoken},
          success: function (response) {
            if(response.message==='cancel'){
                src='{{ like_heart_black_image.image_file.url }}';
            }
            else {
                src='{{ like_heart_red_image.image_file.url }}';
            }
            likeButton.attr('src',src);
            numLikeElement.text('좋아요 ' + response.likes_num + '개'); 
          }
        });
      });
    });

</script>

<script> //더보기 누르면 본문 불러오기
    $(document).ready(function () {
        $('.show_content').on('click', function () {
            var show_content_button = $(this);
            var article = show_content_button.closest('.articles');
            var content_span = article.find('.article_content_span'); // num_of_like_b 요소 선택
            
            show_content_button.css('display', 'none'); // 또는 'inline' 또는 'inline-block' 등으로 설정
            content_span.css('display', 'inline'); // 또는 'inline' 또는 'inline-block' 등으로 설정
        });
    });
</script>
<script> //댓글 달기
    document.addEventListener('DOMContentLoaded', function() { //게시 버튼 invisible/visible
        const textareas = document.querySelectorAll('.add_comment_content');
      
        textareas.forEach(textarea => {
          textarea.addEventListener('input', function() {
            const parent = this.parentElement; // 부모 노드를 가져옵니다.
            const submitButton = parent.querySelector('.submit_comment'); // 부모 노드에서 submit_comment를 검색합니다.
            if (this.value.trim() !== '') {
                submitButton.classList.remove('invisible'); // 클래스 제거
            } else {
              submitButton.classList.add('invisible'); // 클래스 추가
            }
          });
        });
    });

      

    function getTimeDifference(targetTime) {
        const currentTime = new Date();
        const givenTime = new Date(targetTime);
      
        const timeDifferenceMs = currentTime-givenTime ;
      
        const millisecondsInSecond = 1000;
        const millisecondsInMinute = millisecondsInSecond * 60;
        const millisecondsInHour = millisecondsInMinute * 60;
        const millisecondsInDay = millisecondsInHour * 24;
      
        const days = Math.floor(timeDifferenceMs / millisecondsInDay);
        const hours = Math.floor((timeDifferenceMs % millisecondsInDay) / millisecondsInHour);
        const minutes = Math.floor((timeDifferenceMs % millisecondsInHour) / millisecondsInMinute);
        const seconds = Math.floor((timeDifferenceMs % millisecondsInMinute) / millisecondsInSecond);
        if(days>0){
            return `${days}일`;
        }
        else if(hours>0){
            return `${hours}시간`;
        }
        else if(minutes>0){
            return `${minutes}분`;
        }
        else{
            return `${seconds}초`;
        }
    }
</script>

<script>//모달 처리
                /*
<div class="modal-overlay">
    <div class="modal">
        <button class="modal-close">&times;</button>
        <div class="modal-content">
            <div class="mdal_image_div"></div>
            <div class="modal_right_div">
                <div class="modal_right_author_div"></div>
                <div class="modal_profile_and_content_value_div">
                    <div class="modal_profile_div"></div>
                    <div class="modal_content_value_div"></div>
                </div>
                <div class="modal_comment_div"></div>
            <div>
        </div>
    </div>
</div>
*/
document.addEventListener('DOMContentLoaded', () => {
    const openModalBtns = document.querySelectorAll('.show_all_comments'); // 버튼 불러오기
    const modalOverlay = document.createElement('div');         // 모달오버레이 div 생성
    const modal_box = document.createElement('div');            // 모달         div 생성
    const modalContent = document.createElement('div');         // 모달 콘텐트   div 생성
    const modalCloseButton = document.createElement('button');  // 모달클로즈    
    const modal_image_div = document.createElement('div');  // modal_image_div    
    const modal_right_div = document.createElement('div');  // modal_right_div    
    const modal_right_author_div = document.createElement('div');  // modal_right_div
    const modal_profile_and_content_value_div = document.createElement('div'); 
    const modal_profile_div = document.createElement('div'); 
    const modal_content_value_div=document.createElement('div'); 
    const modal_comment_div=document.createElement('div');

    modalOverlay.classList.add('modal-overlay'); // 모달오버레이 div에 class 속성 추가
    modal_box.classList.add('modal');           // 모달 박스 div에 class 속성 추가
    modalContent.classList.add('modal-content'); // 모달콘텐트 div에 class 속성 추가
    modalCloseButton.classList.add('modal-close'); // 모달 button class 속성 추가
    modalCloseButton.innerHTML = '&times;'; // 모달 닫기 아이콘 추가
    modal_image_div.classList.add('modal_image_div');
    modal_right_div.classList.add('modal_right_div');
    modal_right_author_div.classList.add('modal_right_author_div', 'display_flex');
    modal_profile_and_content_value_div.classList.add('modal_profile_and_content_value_div','display_flex');
    modal_profile_div.classList.add('modal_profile_div');
    modal_content_value_div.classList.add('modal_content_value_div');
    modal_comment_div.classList.add('modal_comment_div');

    openModalBtns.forEach(btn => {
        btn.addEventListener('click',  () => {
            document.body.appendChild(modalOverlay);
            modalOverlay.appendChild(modal_box);
            modal_box.appendChild(modalCloseButton);
            modal_box.appendChild(modalContent);
            modalContent.appendChild(modal_image_div);
            modalContent.appendChild(modal_right_div);
            modal_right_div.appendChild(modal_right_author_div);
            modal_right_div.appendChild(modal_profile_and_content_value_div);
            modal_profile_and_content_value_div.appendChild(modal_profile_div);
            modal_profile_and_content_value_div.appendChild(modal_content_value_div);
            modal_right_div.appendChild(modal_comment_div);


            
            modalOverlay.style.display = 'flex';
            top_parent=findParentByClass(btn, "articles");

            //  content_image를 넣는다.
            var article_content_div=findChildByClass(top_parent, "article_content");
            modal_image_div.innerHTML = article_content_div.innerHTML;

            // article_top을 넣는다.
            var article_top_div=findChildByClass(top_parent, "article_top");
            modal_right_author_div.innerHTML=article_top_div.innerHTML;

            //모달에 프로파일 이미지를 넣는다.
            var modral_profile_image_div=findChildByClass(top_parent, "profile_image");
            modal_profile_div.innerHTML=modral_profile_image_div.innerHTML;

            //모달에 본문 넣는다.
            var mordal_author_caption_content_tag=findChildByClass(top_parent, "author_caption_content_tag");
            modal_content_value_div.innerHTML= mordal_author_caption_content_tag.innerHTML;
            findChildByClass(modal_content_value_div, "show_content").remove() //더보기 노드 제거
            findChildByClass(modal_content_value_div, "article_content_span").classList.add('visible'); //본문 보여주기

            // 모달에 코멘트 넣는다.
            const dataPkValue = top_parent.getAttribute('data-pk'); 
            get_modal_comment(dataPkValue, modal_comment_div);
            console.log(data_list);
        });
    });
    
    document.addEventListener('click', event => { //모달 닫기
        if (event.target.classList.contains('modal-close')) {
            modalOverlay.style.display = 'none';
            modalOverlay.innerHTML = '';
        }
    });
});
function findParentByClass(element, className) {
    let parent = element.parentElement;
    while (parent && !parent.classList.contains(className)) {
        parent = parent.parentElement;
    }
    return parent;
}
function findChildByClass(node, className) {
    if (node.nodeType === Node.ELEMENT_NODE && node.classList.contains(className)) {
        return node;
    }
    for (const childNode of node.childNodes) {
        const foundNode = findChildByClass(childNode, className);
        if (foundNode) {
            return foundNode;
        }
    }
    return null;
}

function get_modal_comment(pk, div){
    const dataToSend = {pk: 'value1'};
    var csrftoken=getCookie('csrftoken');   
    var url_value='{% url "posts:add_comment" 0 %}'.replace('0', pk)
    fetch(url_value, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRFToken': csrftoken // CSRF 토큰을 헤더에 추가
        },
        body: JSON.stringify(dataToSend) // JSON 데이터를 문자열로 변환하여 전송
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Request failed:', response.status);
        }
        alert(response);
        return response.text();    })
    .then(data => {
        console.log(data);
        //return data;
    })
    .catch(error => {
        console.error('Error:', error);
    });
}
function getCookie(name){
    var cookieValue=null;
    if(document.cookie && document.cookie !==''){
       var cookies=document.cookie.split(';');
       for(var i =0 ; i< cookies.length; i++){
         var cookie=cookies[i].trim();
         if(cookie.substring(0, name.length+1)===(name+'=')){
              var my_token=cookie.substring(name.length+1);
              cookieValue=decodeURIComponent(my_token);
              break;
         }
       }
    }    
    return cookieValue;
 }






//modal에서 댓글 처리 이제 만들어야 한다...
function get_comment(post_pk, comment_div){
//    const csrftoken=getCookie('csrftoken');   
    const articlePk =$(this).data('pk');
    const submit_button = $(this);
    const parent_node = submit_button.closest('.add_comment');
    const added_comment_div = parent_node.find('.added_comment'); 
    const text_area_node = parent_node.find('.add_comment_content'); 
    const comment_value= text_area_node.val();
    var url_value='{% url "posts:add_comment" 0 %}'.replace('0', articlePk)

    $.ajax({
        type: 'POST',
        url : url_value,
        headers: {"X-CSRFToken":csrftoken},
        data: {
            'content': comment_value  // 댓글 내용 전달
        },
        success: function (response) {
            // 서버로부터 받은 JSON 데이터를 처리합니다.
            var comments = response.message;
            // 기존 댓글 목록 제거
            added_comment_div.empty();

            // comments를 순회하며 댓글을 추가합니다.
            for (var i = 0; i < comments.length; i++) {
                var user = comments[i].user;
                var comment = comments[i].content;
                var created_at = getTimeDifference(comments[i].created_at);
    
                // 댓글 요소 생성
                var commentItem = $('<div>').addClass('comment-item');
                var userElement = $('<span>').addClass('comment-user').text(user + ": ");
                var commentContentElement = $('<span>').addClass('comment-content').text(comment);
                var createdAtElement = $('<span>').addClass('comment-created-at').text(" (" + created_at + ")");
                commentItem.append(userElement, commentContentElement, createdAtElement);

                    // 요소들을 commentItem에 추가
                added_comment_div.append(commentItem);
                //visible 변경
                added_comment_div.removeClass('invisible');// 클래스 제거
            }
        }
    });
};


</script>
{%endblock%}

{% block content %}


 
    <h1>Instagram-like Posts</h1>
    <div class="article_section"  style="max-width: 630px; width: 100%;">
        {% for post in posts %}
            <article  class="articles" data-pk="{{post.pk}}" style="width: 470px;">
                <div class="article_top">
                    <div class="profile_image">
                        {% if profile_image %}
                            <img src="{{ profile_image.image.url }}" class="profile_image_img" alt="Profile Image", style="max-width: 53px;">
                        {% else %}
                            <p>No profile image available.</p>
                        {% endif %}                    
                    </div>
                    <div class="user_name">
                        <span class="post_author">{{post.author}}</span>
                    </div>
                    <div class="dot">
                        -
                    </div>
                    <div class="post_created_time">
                        <span class="post_created_at">{{ post.created_at|timesince }}</span>   
                    </div>
                    <div class="three_dot">
                        쓰리닷
                    </div>
                </div>
                <div class="article_content" >
                    <img src="{{ post.image.url }}" class="post_image_url_img" alt="article_Image">
                </div>
                <div class="like_comment_share_save">
                    <div class="like_button_div like_comment_share_save_button">
                        {%if post.is_liked %}
                            <img class="like_button finger-cursor" data-pk="{{post.pk}}" src="{{ like_heart_red_image.image_file.url }}" alt="Like Heart red Image" >
                        {% else %}
                            <img class="like_button finger-cursor" data-pk="{{post.pk}}" src="{{ like_heart_black_image.image_file.url }}" alt="Like Heart black Image" >
                        {%endif%}
                    </div>
                    <div class="add_comment_button_div like_comment_share_save_button">
                        <svg 
                        	aria-label="댓글 달기" 
                        	class="finger-cursor" 
                        	color="rgb(0, 0, 0)" 
                        	fill="rgb(0, 0, 0)" 
                        	height="24" 
                        	role="img" 
                        	viewBox="0 0 24 24" 
                        	width="24">

                    	    <title>댓글 달기</title>

                        	<path   
                        		d="M20.656 17.008a9.993 9.993 0 1 0-3.59 3.615L22 22Z" 
                        		fill="none" 
                        		stroke="currentColor" 
                        		stroke-linejoin="round" 
                        		stroke-width="2">
                    	    </path>
                        </svg>
                    </div>
                    <div class="article_share like_comment_share_save_button">
                        <svg 
                        	aria-label="게시물 공유" 
                        	class="finger-cursor" 
                        	color="rgb(0, 0, 0)" 
                        	fill="rgb(0, 0, 0)" 
                        	height="24" 
                        	role="img" 
                        	viewBox="0 0 24 24" 
	                        width="24">
	
	                        <title>
	                    	    게시물 공유
	                        </title>
	                        <line fill="none" 
		                       stroke="currentColor" 
		                        stroke-linejoin="round" 
	                        	stroke-width="2" 
	                        	x1="22" 
	                        	x2="9.218" 
	                        	y1="3" 
	                        	y2="10.083">
	                        </line>
	                        <polygon 
	                        	fill="none" 
	                        	points="11.698 20.334 22 3.001 2 3.001 9.218 10.084 11.698 20.334" 
	                        	stroke="currentColor" 
	                        	stroke-linejoin="round" 
	                        	stroke-width="2">
	                        </polygon>
                        </svg>
                    </div>
                    <div class="article_save like_comment_share_save_button">
                        <svg 
                            aria-label="저장" 
                            class="finger-cursor" 
                            color="rgb(0, 0, 0)" 
                            fill="rgb(0, 0, 0)" 
                            height="24" 
                            role="img" 
                            viewBox="0 0 24 24" 
                            width="24">
                    
                            <title>저장</title>
                    
                            <polygon 
                                fill="none" 
                                points="20 21 12 13.44 4 21 4 3 20 3 20 21" 
                                stroke="currentColor" 
                                stroke-linecap="round" 
                                stroke-linejoin="round" 
                               stroke-width="2">
                            </polygon>
                        </svg>
                    </div>
                </div>
                <div class="num_of_like_row">
                    <b class="num_of_like_b">좋아요 {{post.likes_num}}개</b>
                </div>
                <div class="author_caption_content_tag">
                    <div class="author_name_and_content">
                        <span>
                            <b>{{post.author}}</b>
                            <span class="post_caption_span">{{post.caption}}</span>
                        </span>
                    </div>
                    <div class="hidden_article_content">
                        <span class="show_content finger-cursor" style="color: gray;">더보기</span>
                        <span class="article_content_span invisible" >{{post.content}}</span>
                        </span>
                        <p>{% for tag in post.tags.all %}
                                #{{tag.name }}
                                {% endfor %}</p>
                    </div>
                </div>
                <div class="article_comment">
                    <span class="show_all_comments finger-cursor" style="color: gray;">댓글 {{post.comments_num}}개 모두보기</span>
                </div>
                <div class="add_comment">
                    <div class="added_comment invisible"></div>
                    <textarea class="add_comment_content"></textarea>
                    <span  class="submit_comment invisible finger-cursor" data-pk="{{post.pk}}" role="button" style="color: blue;">게시</span>
                </div>
            </article>
        {% endfor %}
    </div>
    <div class="modal-overlay">
        <div class="modal">
            <button class="modal-close">&times;</button>
            <div class="modal-content">
                <div class="mdal_image_div"></div>
                <div class="modal_right_div"><div>
            </div>
        </div>
    </div>
    
{% endblock %}
